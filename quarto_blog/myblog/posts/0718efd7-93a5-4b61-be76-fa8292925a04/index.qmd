---
{"categories": &id001 ["deobfuscation", "junk code", "packers", "Themida", "Code Virtualizer", "VMProtect", "ExeCryptor", "PDF guide", "GitHub topics", "IdA Pro"], "category": "deobfustication", "date": "2023-12-22 23:52:59", "description": "This text delves into the process of (de)obfustication, which encompasses techniques such as adding or removing redundant code and employing packers like Themida, Code Virtualizer, VMProtect, and ExeCryptor. The article furnishes details on a PDF and GitHub topics addressing protectors and junk code generators, along with a guide on utilizing IdA Pro for removing unnecessary code.", "tags": *id001, "title": "(de)obfustication, junk code insertion and removal"}

---

------

# (de)obfustication, junk code insertion and removal

common packers:

Themida, Code Virtualizer, VMProtect, ExeCryptor

[general method for deobfustication](https://www2.cs.arizona.edu/people/debray/Publications/generic-deobf.pdf)

see [github topic](https://github.com/topics/junkcode)

[protectors](https://github.com/rootm0s/Protectors)

[Junk Code Generator and Polymorphic Code Engine Guide](https://guidedhacking.com/threads/junk-code-generator-and-polymorphic-code-engine-guide.6720/)

[ida pro junk code removal](https://github.com/alex-ilgayev/ida-pro-junk-code-removal/blob/master/deobf_plugin.py)

