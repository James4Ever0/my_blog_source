---
{"categories": &id001 ["DARPA", "machine learning", "software exploits", "assembly", "Python", "Neural Machine Translation", "natural language descriptions"], "category": "Machine Learning", "date": "2022-12-07 06:39:45", "description": "The DARPA competition utilizes machine learning to generate software exploits in assembly and Python using Neural Machine Translation for natural language descriptions. This includes modifying Java bytecode and filtering HTML requests.", "tags": *id001, "title": "Cyber Grand Challenge DARPA machine automated cyber attack"}

---

------

# Cyber Grand Challenge DARPA machine automated cyber attack

[ctfwiki's intro on CGC](https://ctf-wiki.org/introduction/cgc/)

analyze source code first, then plan attack or fix code

[cgc's github repo](https://github.com/CyberGrandChallenge) and [website](http://cybergrandchallenge.com/)

search for `darpa cgc` on github

[cyber-challenge](https://github.com/jamespic/cyber-challenge) Some toy examples, to demonstrate ideas that could be used in DARPA's Cyber Grand Challenge including modifying java bytecode and filter out html requests on the fly

[EVIL](https://github.com/dessertlab/EVIL) (Exploiting software VIa natural Language) is an approach to automatically generate software exploits in assembly/Python language from descriptions in natural language. The approach leverages Neural Machine Translation (NMT) techniques and a dataset that we developed for this work.

Topics
linux exploit encoder assembly decoder dataset seq2seq shellcode nmt software-exploitation codebert
Resources
 Readme
License
 GPL-3.0 license
Stars
 13 stars
Watchers
 3 watching
Forks
 1 fork
Releases
No releases published
Packages
No packages published
Contributors 2
@piliguori
piliguori Pietro Liguori
@taisazero
taisazero Erfan Al-Hossami
Languages
Python
97.6%
 
Shell
2.0%
 
Other
0.4%

